name: CI # Name of the continuous integration workflow

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s  
          --health-timeout 5s  
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.17.0'

      - name: Install dependencies
        run: npm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Wait for MongoDB to be ready
        run: |
          until nc -z localhost 27017; do  # Check if MongoDB port is open
            echo "Waiting for MongoDB...";  # Waiting message
            sleep 5;  # Wait for 5 seconds before checking again
          done

      - name: Install MongoDB client
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-org-shell

      - name: Clean MongoDB database
        run: |
          mongo --eval "db.getSiblingDB('test').dropDatabase()"

      - name: Run lint
        run: |
          npm run lint -- --debug &
          LINT_PID=$!
          sleep 120
          kill $LINT_PID || echo "Linting process completed or was killed after timeout"

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build
